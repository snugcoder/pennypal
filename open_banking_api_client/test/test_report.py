"""
    Open Banking

    OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.  # noqa: E501

    The version of the OpenAPI document: 1.13.7
    Contact: apisupport@mastercard.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.cash_flow_cash_flow_balance_summary import CashFlowCashFlowBalanceSummary
from openapi_client.model.cash_flow_cash_flow_characteristics_summary import CashFlowCashFlowCharacteristicsSummary
from openapi_client.model.cash_flow_cash_flow_credit_summary import CashFlowCashFlowCreditSummary
from openapi_client.model.cash_flow_cash_flow_debit_summary import CashFlowCashFlowDebitSummary
from openapi_client.model.cash_flow_possible_loan_deposits import CashFlowPossibleLoanDeposits
from openapi_client.model.cash_flow_report import CashFlowReport
from openapi_client.model.error_message import ErrorMessage
from openapi_client.model.pay_statement_report import PayStatementReport
from openapi_client.model.payroll_employment_history_voie import PayrollEmploymentHistoryVOIE
from openapi_client.model.prequalification_report import PrequalificationReport
from openapi_client.model.prequalification_report_asset_summary import PrequalificationReportAssetSummary
from openapi_client.model.report_income_stream_summary import ReportIncomeStreamSummary
from openapi_client.model.report_institution import ReportInstitution
from openapi_client.model.statement_report import StatementReport
from openapi_client.model.transactions_report import TransactionsReport
from openapi_client.model.voa_report import VOAReport
from openapi_client.model.voa_with_income_report import VOAWithIncomeReport
from openapi_client.model.voe_payroll_report import VOEPayrollReport
from openapi_client.model.voe_transactions_report import VOETransactionsReport
from openapi_client.model.voi_report import VOIReport
from openapi_client.model.voie_payroll_report import VOIEPayrollReport
from openapi_client.model.voie_paystub_report import VOIEPaystubReport
from openapi_client.model.voie_paystub_with_statement_pay_statement import VOIEPaystubWithStatementPayStatement
from openapi_client.model.voie_paystub_with_tx_verify_report import VOIEPaystubWithTXVerifyReport
globals()['CashFlowCashFlowBalanceSummary'] = CashFlowCashFlowBalanceSummary
globals()['CashFlowCashFlowCharacteristicsSummary'] = CashFlowCashFlowCharacteristicsSummary
globals()['CashFlowCashFlowCreditSummary'] = CashFlowCashFlowCreditSummary
globals()['CashFlowCashFlowDebitSummary'] = CashFlowCashFlowDebitSummary
globals()['CashFlowPossibleLoanDeposits'] = CashFlowPossibleLoanDeposits
globals()['CashFlowReport'] = CashFlowReport
globals()['ErrorMessage'] = ErrorMessage
globals()['PayStatementReport'] = PayStatementReport
globals()['PayrollEmploymentHistoryVOIE'] = PayrollEmploymentHistoryVOIE
globals()['PrequalificationReport'] = PrequalificationReport
globals()['PrequalificationReportAssetSummary'] = PrequalificationReportAssetSummary
globals()['ReportIncomeStreamSummary'] = ReportIncomeStreamSummary
globals()['ReportInstitution'] = ReportInstitution
globals()['StatementReport'] = StatementReport
globals()['TransactionsReport'] = TransactionsReport
globals()['VOAReport'] = VOAReport
globals()['VOAWithIncomeReport'] = VOAWithIncomeReport
globals()['VOEPayrollReport'] = VOEPayrollReport
globals()['VOETransactionsReport'] = VOETransactionsReport
globals()['VOIEPayrollReport'] = VOIEPayrollReport
globals()['VOIEPaystubReport'] = VOIEPaystubReport
globals()['VOIEPaystubWithStatementPayStatement'] = VOIEPaystubWithStatementPayStatement
globals()['VOIEPaystubWithTXVerifyReport'] = VOIEPaystubWithTXVerifyReport
globals()['VOIReport'] = VOIReport
from openapi_client.model.report import Report


class TestReport(unittest.TestCase):
    """Report unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testReport(self):
        """Test Report"""
        # FIXME: construct object with mandatory attributes with example values
        # model = Report()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
