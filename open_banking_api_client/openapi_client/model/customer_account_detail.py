"""
    Open Banking

    OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.  # noqa: E501

    The version of the OpenAPI document: 1.13.7
    Contact: apisupport@mastercard.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)
from ..model_utils import OpenApiModel
from openapi_client.exceptions import ApiAttributeError



class CustomerAccountDetail(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        return {
            'date_as_of': (int,),  # noqa: E501
            'available_balance_amount': (float,),  # noqa: E501
            'open_date': (int,),  # noqa: E501
            'period_start_date': (int,),  # noqa: E501
            'period_end_date': (int,),  # noqa: E501
            'period_interest_rate': (float,),  # noqa: E501
            'period_deposit_amount': (float,),  # noqa: E501
            'period_interest_amount': (float,),  # noqa: E501
            'interest_ytd_amount': (float,),  # noqa: E501
            'interest_prior_ytd_amount': (float,),  # noqa: E501
            'maturity_date': (int,),  # noqa: E501
            'interest_rate': (str,),  # noqa: E501
            'credit_available_amount': (float,),  # noqa: E501
            'credit_max_amount': (float,),  # noqa: E501
            'cash_advance_available_amount': (float,),  # noqa: E501
            'cash_advance_max_amount': (float,),  # noqa: E501
            'cash_advance_balance': (float,),  # noqa: E501
            'cash_advance_interest_rate': (float,),  # noqa: E501
            'current_balance': (float,),  # noqa: E501
            'payment_min_amount': (float,),  # noqa: E501
            'payment_due_date': (int,),  # noqa: E501
            'previous_balance': (float,),  # noqa: E501
            'statement_start_date': (int,),  # noqa: E501
            'statement_end_date': (int,),  # noqa: E501
            'statement_purchase_amount': (float,),  # noqa: E501
            'statement_finance_amount': (float,),  # noqa: E501
            'statement_credit_amount': (float,),  # noqa: E501
            'reward_earned_balance': (int,),  # noqa: E501
            'past_due_amount': (float,),  # noqa: E501
            'last_payment_amount': (float,),  # noqa: E501
            'last_payment_date': (int,),  # noqa: E501
            'statement_close_balance': (float,),  # noqa: E501
            'term_of_ml': (str,),  # noqa: E501
            'ml_holder_name': (str,),  # noqa: E501
            'description': (str,),  # noqa: E501
            'late_fee_amount': (float,),  # noqa: E501
            'payoff_amount': (float,),  # noqa: E501
            'payoff_amount_date': (int,),  # noqa: E501
            'original_maturity_date': (int,),  # noqa: E501
            'principal_balance': (float,),  # noqa: E501
            'escrow_balance': (float,),  # noqa: E501
            'interest_period': (str,),  # noqa: E501
            'initial_ml_amount': (float,),  # noqa: E501
            'initial_ml_date': (int,),  # noqa: E501
            'next_payment_principal_amount': (float,),  # noqa: E501
            'next_payment_interest_amount': (float,),  # noqa: E501
            'next_payment': (float,),  # noqa: E501
            'next_payment_date': (int,),  # noqa: E501
            'last_payment_due_date': (int,),  # noqa: E501
            'last_payment_receive_date': (int,),  # noqa: E501
            'last_payment_principal_amount': (float,),  # noqa: E501
            'last_payment_interest_amount': (float,),  # noqa: E501
            'last_payment_escrow_amount': (float,),  # noqa: E501
            'last_payment_last_fee_amount': (float,),  # noqa: E501
            'last_payment_late_charge': (float,),  # noqa: E501
            'ytd_principal_paid': (float,),  # noqa: E501
            'ytd_interest_paid': (float,),  # noqa: E501
            'ytd_insurance_paid': (float,),  # noqa: E501
            'ytd_tax_paid': (float,),  # noqa: E501
            'auto_pay_enrolled': (bool,),  # noqa: E501
            'margin_allowed': (bool,),  # noqa: E501
            'cash_account_allowed': (bool,),  # noqa: E501
            'collateral': (str,),  # noqa: E501
            'current_school': (str,),  # noqa: E501
            'first_payment_date': (int,),  # noqa: E501
            'first_mortgage': (bool,),  # noqa: E501
            'loan_payment_freq': (str,),  # noqa: E501
            'original_school': (str,),  # noqa: E501
            'recurring_payment_amount': (float,),  # noqa: E501
            'lender': (str,),  # noqa: E501
            'ending_balance_amount': (float,),  # noqa: E501
            'loan_term_type': (str,),  # noqa: E501
            'payments_made': (int,),  # noqa: E501
            'balloon_amount': (float,),  # noqa: E501
            'projected_interest': (float,),  # noqa: E501
            'interest_paid_ltd': (float,),  # noqa: E501
            'interest_rate_type': (str,),  # noqa: E501
            'loan_payment_type': (str,),  # noqa: E501
            'repayment_plan': (str,),  # noqa: E501
            'payments_remaining': (int,),  # noqa: E501
            'margin_balance': (float,),  # noqa: E501
            'short_balance': (float,),  # noqa: E501
            'available_cash_balance': (float,),  # noqa: E501
            'maturity_value_amount': (float,),  # noqa: E501
            'vested_balance': (float,),  # noqa: E501
            'emp_match_amount': (float,),  # noqa: E501
            'emp_pretax_contrib_amount': (float,),  # noqa: E501
            'emp_pretax_contrib_amount_ytd': (float,),  # noqa: E501
            'contrib_total_ytd': (float,),  # noqa: E501
            'cash_balance_amount': (float,),  # noqa: E501
            'pre_tax_amount': (float,),  # noqa: E501
            'after_tax_amount': (float,),  # noqa: E501
            'match_amount': (float,),  # noqa: E501
            'profit_sharing_amount': (float,),  # noqa: E501
            'rollover_amount': (float,),  # noqa: E501
            'other_vest_amount': (float,),  # noqa: E501
            'other_nonvest_amount': (float,),  # noqa: E501
            'current_loan_balance': (float,),  # noqa: E501
            'loan_rate': (float,),  # noqa: E501
            'buy_power': (float,),  # noqa: E501
            'rollover_ltd': (float,),  # noqa: E501
            'loan_award_id': (str,),  # noqa: E501
            'original_interest_rate': (float,),  # noqa: E501
            'guarantor': (str,),  # noqa: E501
            'owner': (str,),  # noqa: E501
            'interest_subsidy_type': (str,),  # noqa: E501
            'interest_balance': (float,),  # noqa: E501
            'remaining_term_of_ml': (float,),  # noqa: E501
            'initial_interest_rate': (float,),  # noqa: E501
            'fees_balance': (float,),  # noqa: E501
            'loan_ytd_interest_paid': (float,),  # noqa: E501
            'loan_ytd_fees_paid': (float,),  # noqa: E501
            'loan_ytd_principal_paid': (float,),  # noqa: E501
            'loan_status': (str,),  # noqa: E501
            'loan_status_start_date': (int,),  # noqa: E501
            'loan_status_end_date': (int,),  # noqa: E501
            'weighted_interest_rate': (float,),  # noqa: E501
            'repayment_plan_start_date': (int,),  # noqa: E501
            'repayment_plan_end_date': (int,),  # noqa: E501
            'expected_payoff_date': (int,),  # noqa: E501
            'out_of_school_date': (int,),  # noqa: E501
            'convert_to_repayment': (int,),  # noqa: E501
            'days_delinquent': (int,),  # noqa: E501
            'total_principal_paid': (float,),  # noqa: E501
            'total_interest_paid': (float,),  # noqa: E501
            'total_amount_paid': (float,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'date_as_of': 'dateAsOf',  # noqa: E501
        'available_balance_amount': 'availableBalanceAmount',  # noqa: E501
        'open_date': 'openDate',  # noqa: E501
        'period_start_date': 'periodStartDate',  # noqa: E501
        'period_end_date': 'periodEndDate',  # noqa: E501
        'period_interest_rate': 'periodInterestRate',  # noqa: E501
        'period_deposit_amount': 'periodDepositAmount',  # noqa: E501
        'period_interest_amount': 'periodInterestAmount',  # noqa: E501
        'interest_ytd_amount': 'interestYtdAmount',  # noqa: E501
        'interest_prior_ytd_amount': 'interestPriorYtdAmount',  # noqa: E501
        'maturity_date': 'maturityDate',  # noqa: E501
        'interest_rate': 'interestRate',  # noqa: E501
        'credit_available_amount': 'creditAvailableAmount',  # noqa: E501
        'credit_max_amount': 'creditMaxAmount',  # noqa: E501
        'cash_advance_available_amount': 'cashAdvanceAvailableAmount',  # noqa: E501
        'cash_advance_max_amount': 'cashAdvanceMaxAmount',  # noqa: E501
        'cash_advance_balance': 'cashAdvanceBalance',  # noqa: E501
        'cash_advance_interest_rate': 'cashAdvanceInterestRate',  # noqa: E501
        'current_balance': 'currentBalance',  # noqa: E501
        'payment_min_amount': 'paymentMinAmount',  # noqa: E501
        'payment_due_date': 'paymentDueDate',  # noqa: E501
        'previous_balance': 'previousBalance',  # noqa: E501
        'statement_start_date': 'statementStartDate',  # noqa: E501
        'statement_end_date': 'statementEndDate',  # noqa: E501
        'statement_purchase_amount': 'statementPurchaseAmount',  # noqa: E501
        'statement_finance_amount': 'statementFinanceAmount',  # noqa: E501
        'statement_credit_amount': 'statementCreditAmount',  # noqa: E501
        'reward_earned_balance': 'rewardEarnedBalance',  # noqa: E501
        'past_due_amount': 'pastDueAmount',  # noqa: E501
        'last_payment_amount': 'lastPaymentAmount',  # noqa: E501
        'last_payment_date': 'lastPaymentDate',  # noqa: E501
        'statement_close_balance': 'statementCloseBalance',  # noqa: E501
        'term_of_ml': 'termOfMl',  # noqa: E501
        'ml_holder_name': 'mlHolderName',  # noqa: E501
        'description': 'description',  # noqa: E501
        'late_fee_amount': 'lateFeeAmount',  # noqa: E501
        'payoff_amount': 'payoffAmount',  # noqa: E501
        'payoff_amount_date': 'payoffAmountDate',  # noqa: E501
        'original_maturity_date': 'originalMaturityDate',  # noqa: E501
        'principal_balance': 'principalBalance',  # noqa: E501
        'escrow_balance': 'escrowBalance',  # noqa: E501
        'interest_period': 'interestPeriod',  # noqa: E501
        'initial_ml_amount': 'initialMlAmount',  # noqa: E501
        'initial_ml_date': 'initialMlDate',  # noqa: E501
        'next_payment_principal_amount': 'nextPaymentPrincipalAmount',  # noqa: E501
        'next_payment_interest_amount': 'nextPaymentInterestAmount',  # noqa: E501
        'next_payment': 'nextPayment',  # noqa: E501
        'next_payment_date': 'nextPaymentDate',  # noqa: E501
        'last_payment_due_date': 'lastPaymentDueDate',  # noqa: E501
        'last_payment_receive_date': 'lastPaymentReceiveDate',  # noqa: E501
        'last_payment_principal_amount': 'lastPaymentPrincipalAmount',  # noqa: E501
        'last_payment_interest_amount': 'lastPaymentInterestAmount',  # noqa: E501
        'last_payment_escrow_amount': 'lastPaymentEscrowAmount',  # noqa: E501
        'last_payment_last_fee_amount': 'lastPaymentLastFeeAmount',  # noqa: E501
        'last_payment_late_charge': 'lastPaymentLateCharge',  # noqa: E501
        'ytd_principal_paid': 'ytdPrincipalPaid',  # noqa: E501
        'ytd_interest_paid': 'ytdInterestPaid',  # noqa: E501
        'ytd_insurance_paid': 'ytdInsurancePaid',  # noqa: E501
        'ytd_tax_paid': 'ytdTaxPaid',  # noqa: E501
        'auto_pay_enrolled': 'autoPayEnrolled',  # noqa: E501
        'margin_allowed': 'marginAllowed',  # noqa: E501
        'cash_account_allowed': 'cashAccountAllowed',  # noqa: E501
        'collateral': 'collateral',  # noqa: E501
        'current_school': 'currentSchool',  # noqa: E501
        'first_payment_date': 'firstPaymentDate',  # noqa: E501
        'first_mortgage': 'firstMortgage',  # noqa: E501
        'loan_payment_freq': 'loanPaymentFreq',  # noqa: E501
        'original_school': 'originalSchool',  # noqa: E501
        'recurring_payment_amount': 'recurringPaymentAmount',  # noqa: E501
        'lender': 'lender',  # noqa: E501
        'ending_balance_amount': 'endingBalanceAmount',  # noqa: E501
        'loan_term_type': 'loanTermType',  # noqa: E501
        'payments_made': 'paymentsMade',  # noqa: E501
        'balloon_amount': 'balloonAmount',  # noqa: E501
        'projected_interest': 'projectedInterest',  # noqa: E501
        'interest_paid_ltd': 'interestPaidLtd',  # noqa: E501
        'interest_rate_type': 'interestRateType',  # noqa: E501
        'loan_payment_type': 'loanPaymentType',  # noqa: E501
        'repayment_plan': 'repaymentPlan',  # noqa: E501
        'payments_remaining': 'paymentsRemaining',  # noqa: E501
        'margin_balance': 'marginBalance',  # noqa: E501
        'short_balance': 'shortBalance',  # noqa: E501
        'available_cash_balance': 'availableCashBalance',  # noqa: E501
        'maturity_value_amount': 'maturityValueAmount',  # noqa: E501
        'vested_balance': 'vestedBalance',  # noqa: E501
        'emp_match_amount': 'empMatchAmount',  # noqa: E501
        'emp_pretax_contrib_amount': 'empPretaxContribAmount',  # noqa: E501
        'emp_pretax_contrib_amount_ytd': 'empPretaxContribAmountYtd',  # noqa: E501
        'contrib_total_ytd': 'contribTotalYtd',  # noqa: E501
        'cash_balance_amount': 'cashBalanceAmount',  # noqa: E501
        'pre_tax_amount': 'preTaxAmount',  # noqa: E501
        'after_tax_amount': 'afterTaxAmount',  # noqa: E501
        'match_amount': 'matchAmount',  # noqa: E501
        'profit_sharing_amount': 'profitSharingAmount',  # noqa: E501
        'rollover_amount': 'rolloverAmount',  # noqa: E501
        'other_vest_amount': 'otherVestAmount',  # noqa: E501
        'other_nonvest_amount': 'otherNonvestAmount',  # noqa: E501
        'current_loan_balance': 'currentLoanBalance',  # noqa: E501
        'loan_rate': 'loanRate',  # noqa: E501
        'buy_power': 'buyPower',  # noqa: E501
        'rollover_ltd': 'rolloverLtd',  # noqa: E501
        'loan_award_id': 'loanAwardId',  # noqa: E501
        'original_interest_rate': 'originalInterestRate',  # noqa: E501
        'guarantor': 'guarantor',  # noqa: E501
        'owner': 'owner',  # noqa: E501
        'interest_subsidy_type': 'interestSubsidyType',  # noqa: E501
        'interest_balance': 'interestBalance',  # noqa: E501
        'remaining_term_of_ml': 'remainingTermOfMl',  # noqa: E501
        'initial_interest_rate': 'initialInterestRate',  # noqa: E501
        'fees_balance': 'feesBalance',  # noqa: E501
        'loan_ytd_interest_paid': 'loanYtdInterestPaid',  # noqa: E501
        'loan_ytd_fees_paid': 'loanYtdFeesPaid',  # noqa: E501
        'loan_ytd_principal_paid': 'loanYtdPrincipalPaid',  # noqa: E501
        'loan_status': 'loanStatus',  # noqa: E501
        'loan_status_start_date': 'loanStatusStartDate',  # noqa: E501
        'loan_status_end_date': 'loanStatusEndDate',  # noqa: E501
        'weighted_interest_rate': 'weightedInterestRate',  # noqa: E501
        'repayment_plan_start_date': 'repaymentPlanStartDate',  # noqa: E501
        'repayment_plan_end_date': 'repaymentPlanEndDate',  # noqa: E501
        'expected_payoff_date': 'expectedPayoffDate',  # noqa: E501
        'out_of_school_date': 'outOfSchoolDate',  # noqa: E501
        'convert_to_repayment': 'convertToRepayment',  # noqa: E501
        'days_delinquent': 'daysDelinquent',  # noqa: E501
        'total_principal_paid': 'totalPrincipalPaid',  # noqa: E501
        'total_interest_paid': 'totalInterestPaid',  # noqa: E501
        'total_amount_paid': 'totalAmountPaid',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, *args, **kwargs):  # noqa: E501
        """CustomerAccountDetail - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            date_as_of (int): (All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            available_balance_amount (float): (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions). [optional]  # noqa: E501
            open_date (int): (Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            period_start_date (int): (Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            period_end_date (int): End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            period_interest_rate (float): (Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate. [optional]  # noqa: E501
            period_deposit_amount (float): (Checking/Savings/CD/MoneyMarket) Amount deposited in period. [optional]  # noqa: E501
            period_interest_amount (float): (Checking/Savings/CD/MoneyMarket) Interest accrued during the current period. [optional]  # noqa: E501
            interest_ytd_amount (float): (Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date. [optional]  # noqa: E501
            interest_prior_ytd_amount (float): (Checking/Savings/CD/MoneyMarket) Interest earned in prior year. [optional]  # noqa: E501
            maturity_date (int): (Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            interest_rate (str): (Credit Card/Line Of Credit) and (Mortgage/Loan) The account's current interest rate. [optional]  # noqa: E501
            credit_available_amount (float): (Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance). [optional]  # noqa: E501
            credit_max_amount (float): (Credit Card/Line Of Credit) The account's credit limit. [optional]  # noqa: E501
            cash_advance_available_amount (float): (Credit Card/Line Of Credit) Currently available cash advance. [optional]  # noqa: E501
            cash_advance_max_amount (float): (Credit Card/Line Of Credit) Maximum cash advance amount. [optional]  # noqa: E501
            cash_advance_balance (float): (Credit Card/Line Of Credit) Balance of current cash advance. [optional]  # noqa: E501
            cash_advance_interest_rate (float): (Credit Card/Line Of Credit) Interest rate for cash advances. [optional]  # noqa: E501
            current_balance (float): (Credit Card/Line Of Credit) and (Investment) Current balance. [optional]  # noqa: E501
            payment_min_amount (float): (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due. [optional]  # noqa: E501
            payment_due_date (int): (Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            previous_balance (float): (Credit Card/Line Of Credit) Prior balance in last statement. [optional]  # noqa: E501
            statement_start_date (int): (Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            statement_end_date (int): (Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            statement_purchase_amount (float): (Credit Card/Line Of Credit) Purchase amount of statement period. [optional]  # noqa: E501
            statement_finance_amount (float): (Credit Card/Line Of Credit) Finance amount of statement period. [optional]  # noqa: E501
            statement_credit_amount (float): (Credit Card/Line Of Credit) Credit amount applied in statement period. [optional]  # noqa: E501
            reward_earned_balance (int): (Credit Card/Line Of Credit) Earned reward balance. [optional]  # noqa: E501
            past_due_amount (float): (Credit Card/Line Of Credit) Balance past due. [optional]  # noqa: E501
            last_payment_amount (float): (Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment. [optional]  # noqa: E501
            last_payment_date (int): (Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            statement_close_balance (float): (Credit Card/Line Of Credit) Balance of statement at close. [optional]  # noqa: E501
            term_of_ml (str): (Mortgage/Loan) Length of loan in months. [optional]  # noqa: E501
            ml_holder_name (str): (Mortgage/Loan) Holder of the mortgage or loan. [optional]  # noqa: E501
            description (str): (Mortgage/Loan) Description of loan. [optional]  # noqa: E501
            late_fee_amount (float): (Mortgage/Loan) Late fee charged. [optional]  # noqa: E501
            payoff_amount (float): (Mortgage/Loan) The amount required to payoff the loan. [optional]  # noqa: E501
            payoff_amount_date (int): (Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            original_maturity_date (int): (Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            principal_balance (float): (Mortgage/Loan) The principal balance. [optional]  # noqa: E501
            escrow_balance (float): (Mortgage/Loan) The escrow balance. [optional]  # noqa: E501
            interest_period (str): (Mortgage/Loan) Period of interest. [optional]  # noqa: E501
            initial_ml_amount (float): (Mortgage/Loan) Original loan amount. [optional]  # noqa: E501
            initial_ml_date (int): (Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            next_payment_principal_amount (float): (Mortgage/Loan) Amount towards principal in next payment. [optional]  # noqa: E501
            next_payment_interest_amount (float): (Mortgage/Loan) Amount of interest in next payment. [optional]  # noqa: E501
            next_payment (float): (Mortgage/Loan) Minimum payment due. [optional]  # noqa: E501
            next_payment_date (int): (Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            last_payment_due_date (int): (Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            last_payment_receive_date (int): (Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            last_payment_principal_amount (float): (Mortgage/Loan) Amount towards principal in last payment. [optional]  # noqa: E501
            last_payment_interest_amount (float): (Mortgage/Loan) Amount of interest in last payment. [optional]  # noqa: E501
            last_payment_escrow_amount (float): (Mortgage/Loan) Amount towards escrow in last payment. [optional]  # noqa: E501
            last_payment_last_fee_amount (float): (Mortgage/Loan) Amount of last fee in last payment. [optional]  # noqa: E501
            last_payment_late_charge (float): (Mortgage/Loan) Amount of late charge in last payment. [optional]  # noqa: E501
            ytd_principal_paid (float): (Mortgage/Loan) Principal paid year-to-date. [optional]  # noqa: E501
            ytd_interest_paid (float): (Mortgage/Loan) Interest paid year-to-date. [optional]  # noqa: E501
            ytd_insurance_paid (float): (Mortgage/Loan) Insurance paid year-to-date. [optional]  # noqa: E501
            ytd_tax_paid (float): (Mortgage/Loan) Tax paid year-to-date. [optional]  # noqa: E501
            auto_pay_enrolled (bool): (Mortgage/Loan) Enrolled in autopay (F/Y). [optional]  # noqa: E501
            margin_allowed (bool): Margin trading indicator (true / false). [optional]  # noqa: E501
            cash_account_allowed (bool): Cash account allowed indicator (true / false). [optional]  # noqa: E501
            collateral (str): (Mortgage/Loan) Collateral on loan. [optional]  # noqa: E501
            current_school (str): (Mortgage/Loan) Current school. [optional]  # noqa: E501
            first_payment_date (int): (Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            first_mortgage (bool): (Mortgage/Loan) First mortgage (F/Y). [optional]  # noqa: E501
            loan_payment_freq (str): (Mortgage/Loan) Frequency of payments (monthly, etc.). [optional]  # noqa: E501
            original_school (str): (Mortgage/Loan) Original school. [optional]  # noqa: E501
            recurring_payment_amount (float): (Mortgage/Loan) Recurring payment amount. [optional]  # noqa: E501
            lender (str): (Mortgage/Loan) Owner of loan. [optional]  # noqa: E501
            ending_balance_amount (float): (Mortgage/Loan) Ending balance. [optional]  # noqa: E501
            loan_term_type (str): (Mortgage/Loan) Type of loan term. [optional]  # noqa: E501
            payments_made (int): (Mortgage/Loan) Number of payments made. [optional]  # noqa: E501
            balloon_amount (float): (Mortgage/Loan) Balloon payment amount. [optional]  # noqa: E501
            projected_interest (float): (Mortgage/Loan) Projected interest on the loan. [optional]  # noqa: E501
            interest_paid_ltd (float): (Mortgage/Loan) Interest paid since inception of loan (life to date). [optional]  # noqa: E501
            interest_rate_type (str): (Mortgage/Loan) Type of interest rate. [optional]  # noqa: E501
            loan_payment_type (str): (Mortgage/Loan) Type of loan payment. [optional]  # noqa: E501
            repayment_plan (str): (Mortgage/Loan) Type of repayment plan for the student loan. [optional]  # noqa: E501
            payments_remaining (int): (Mortgage/Loan) Number of payments remaining before loan is paid off. [optional]  # noqa: E501
            margin_balance (float): (Investment) Net interest earned after deducting interest paid out. [optional]  # noqa: E501
            short_balance (float): (Investment) Sum of short balance. [optional]  # noqa: E501
            available_cash_balance (float): (Investment) Amount available for cash withdrawal. [optional]  # noqa: E501
            maturity_value_amount (float): (Investment) amount payable to an investor at maturity. [optional]  # noqa: E501
            vested_balance (float): (Investment) Vested amount in account. [optional]  # noqa: E501
            emp_match_amount (float): (Investment) Employer matched contributions. [optional]  # noqa: E501
            emp_pretax_contrib_amount (float): (Investment) Employer pretax contribution amount. [optional]  # noqa: E501
            emp_pretax_contrib_amount_ytd (float): (Investment) Employer pretax contribution amount year to date. [optional]  # noqa: E501
            contrib_total_ytd (float): (Investment) Total year to date contributions. [optional]  # noqa: E501
            cash_balance_amount (float): (Investment) Cash balance of account. [optional]  # noqa: E501
            pre_tax_amount (float): (Investment) Pre tax amount of total balance. [optional]  # noqa: E501
            after_tax_amount (float): (Investment) Post tax amount of total balance. [optional]  # noqa: E501
            match_amount (float): (Investment) Amount matched. [optional]  # noqa: E501
            profit_sharing_amount (float): (Investment) Amount of balance for profit sharing. [optional]  # noqa: E501
            rollover_amount (float): (Investment) Amount of balance rolled over from original account (401k, etc.). [optional]  # noqa: E501
            other_vest_amount (float): (Investment) Other vested amount. [optional]  # noqa: E501
            other_nonvest_amount (float): (Investment) Other nonvested amount. [optional]  # noqa: E501
            current_loan_balance (float): (Investment) Current loan balance. [optional]  # noqa: E501
            loan_rate (float): (Investment) Interest rate of loan. [optional]  # noqa: E501
            buy_power (float): (Investment) Money available to buy securities. [optional]  # noqa: E501
            rollover_ltd (float): (Investment) Life to date of money rolled over. [optional]  # noqa: E501
            loan_award_id (str): (Student Loan) The federal unique loan identifying number. [optional]  # noqa: E501
            original_interest_rate (float): (Student Loan) The original interest rate to which the loan was disbursed, in APY. [optional]  # noqa: E501
            guarantor (str): (Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults). [optional]  # noqa: E501
            owner (str): (Student Loan) Owner of the loan. [optional]  # noqa: E501
            interest_subsidy_type (str): (Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized). [optional]  # noqa: E501
            interest_balance (float): (Student Loan) The total outstanding interest balance. [optional]  # noqa: E501
            remaining_term_of_ml (float): (Student Loan) The number of months still outstanding on a loan. [optional]  # noqa: E501
            initial_interest_rate (float): (Student Loan) Initial interest rate of loan. [optional]  # noqa: E501
            fees_balance (float): (Student Loan) The total outstanding fees balance. [optional]  # noqa: E501
            loan_ytd_interest_paid (float): (Student Loan) Loan interest paid year-to-date. [optional]  # noqa: E501
            loan_ytd_fees_paid (float): (Student Loan) Loan fees paid year-to-date. [optional]  # noqa: E501
            loan_ytd_principal_paid (float): (Student Loan) Loan principal paid year-to-date. [optional]  # noqa: E501
            loan_status (str): (Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance). [optional]  # noqa: E501
            loan_status_start_date (int): (Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            loan_status_end_date (int): (Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            weighted_interest_rate (float): (Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY. [optional]  # noqa: E501
            repayment_plan_start_date (int): (Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            repayment_plan_end_date (int): (Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            expected_payoff_date (int): (Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            out_of_school_date (int): (Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            convert_to_repayment (int): (Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            days_delinquent (int): (Student Loan) The number of days past a due date that a payment should have been made. [optional]  # noqa: E501
            total_principal_paid (float): (Student Loan) The total amount paid towards the principal balance. [optional]  # noqa: E501
            total_interest_paid (float): (Student Loan) The total amount paid towards interest. [optional]  # noqa: E501
            total_amount_paid (float): (Student Loan) The total amount paid. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """CustomerAccountDetail - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            date_as_of (int): (All Account Types) Most recent date of the following information. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            available_balance_amount (float): (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available balance (typically the current balance with adjustments for any pending transactions). [optional]  # noqa: E501
            open_date (int): (Checking/Savings/CD/MoneyMarket) Date when account was opened. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            period_start_date (int): (Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            period_end_date (int): End date of period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            period_interest_rate (float): (Checking/Savings/CD/MoneyMarket) The APY for the current period interest rate. [optional]  # noqa: E501
            period_deposit_amount (float): (Checking/Savings/CD/MoneyMarket) Amount deposited in period. [optional]  # noqa: E501
            period_interest_amount (float): (Checking/Savings/CD/MoneyMarket) Interest accrued during the current period. [optional]  # noqa: E501
            interest_ytd_amount (float): (Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date. [optional]  # noqa: E501
            interest_prior_ytd_amount (float): (Checking/Savings/CD/MoneyMarket) Interest earned in prior year. [optional]  # noqa: E501
            maturity_date (int): (Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            interest_rate (str): (Credit Card/Line Of Credit) and (Mortgage/Loan) The account's current interest rate. [optional]  # noqa: E501
            credit_available_amount (float): (Credit Card/Line Of Credit) The available credit (typically the credit limit minus the current balance). [optional]  # noqa: E501
            credit_max_amount (float): (Credit Card/Line Of Credit) The account's credit limit. [optional]  # noqa: E501
            cash_advance_available_amount (float): (Credit Card/Line Of Credit) Currently available cash advance. [optional]  # noqa: E501
            cash_advance_max_amount (float): (Credit Card/Line Of Credit) Maximum cash advance amount. [optional]  # noqa: E501
            cash_advance_balance (float): (Credit Card/Line Of Credit) Balance of current cash advance. [optional]  # noqa: E501
            cash_advance_interest_rate (float): (Credit Card/Line Of Credit) Interest rate for cash advances. [optional]  # noqa: E501
            current_balance (float): (Credit Card/Line Of Credit) and (Investment) Current balance. [optional]  # noqa: E501
            payment_min_amount (float): (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due. [optional]  # noqa: E501
            payment_due_date (int): (Credit Card/Line Of Credit) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            previous_balance (float): (Credit Card/Line Of Credit) Prior balance in last statement. [optional]  # noqa: E501
            statement_start_date (int): (Credit Card/Line Of Credit) Start date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            statement_end_date (int): (Credit Card/Line Of Credit) End date of statement period. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            statement_purchase_amount (float): (Credit Card/Line Of Credit) Purchase amount of statement period. [optional]  # noqa: E501
            statement_finance_amount (float): (Credit Card/Line Of Credit) Finance amount of statement period. [optional]  # noqa: E501
            statement_credit_amount (float): (Credit Card/Line Of Credit) Credit amount applied in statement period. [optional]  # noqa: E501
            reward_earned_balance (int): (Credit Card/Line Of Credit) Earned reward balance. [optional]  # noqa: E501
            past_due_amount (float): (Credit Card/Line Of Credit) Balance past due. [optional]  # noqa: E501
            last_payment_amount (float): (Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received in the last payment. [optional]  # noqa: E501
            last_payment_date (int): (Credit Card/Line Of Credit) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            statement_close_balance (float): (Credit Card/Line Of Credit) Balance of statement at close. [optional]  # noqa: E501
            term_of_ml (str): (Mortgage/Loan) Length of loan in months. [optional]  # noqa: E501
            ml_holder_name (str): (Mortgage/Loan) Holder of the mortgage or loan. [optional]  # noqa: E501
            description (str): (Mortgage/Loan) Description of loan. [optional]  # noqa: E501
            late_fee_amount (float): (Mortgage/Loan) Late fee charged. [optional]  # noqa: E501
            payoff_amount (float): (Mortgage/Loan) The amount required to payoff the loan. [optional]  # noqa: E501
            payoff_amount_date (int): (Mortgage/Loan) Date of final payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            original_maturity_date (int): (Mortgage/Loan) Original date of loan maturity. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            principal_balance (float): (Mortgage/Loan) The principal balance. [optional]  # noqa: E501
            escrow_balance (float): (Mortgage/Loan) The escrow balance. [optional]  # noqa: E501
            interest_period (str): (Mortgage/Loan) Period of interest. [optional]  # noqa: E501
            initial_ml_amount (float): (Mortgage/Loan) Original loan amount. [optional]  # noqa: E501
            initial_ml_date (int): (Mortgage/Loan) Original date of loan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            next_payment_principal_amount (float): (Mortgage/Loan) Amount towards principal in next payment. [optional]  # noqa: E501
            next_payment_interest_amount (float): (Mortgage/Loan) Amount of interest in next payment. [optional]  # noqa: E501
            next_payment (float): (Mortgage/Loan) Minimum payment due. [optional]  # noqa: E501
            next_payment_date (int): (Mortgage/Loan) Due date for the next payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            last_payment_due_date (int): (Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            last_payment_receive_date (int): (Mortgage/Loan) The date of the last payment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            last_payment_principal_amount (float): (Mortgage/Loan) Amount towards principal in last payment. [optional]  # noqa: E501
            last_payment_interest_amount (float): (Mortgage/Loan) Amount of interest in last payment. [optional]  # noqa: E501
            last_payment_escrow_amount (float): (Mortgage/Loan) Amount towards escrow in last payment. [optional]  # noqa: E501
            last_payment_last_fee_amount (float): (Mortgage/Loan) Amount of last fee in last payment. [optional]  # noqa: E501
            last_payment_late_charge (float): (Mortgage/Loan) Amount of late charge in last payment. [optional]  # noqa: E501
            ytd_principal_paid (float): (Mortgage/Loan) Principal paid year-to-date. [optional]  # noqa: E501
            ytd_interest_paid (float): (Mortgage/Loan) Interest paid year-to-date. [optional]  # noqa: E501
            ytd_insurance_paid (float): (Mortgage/Loan) Insurance paid year-to-date. [optional]  # noqa: E501
            ytd_tax_paid (float): (Mortgage/Loan) Tax paid year-to-date. [optional]  # noqa: E501
            auto_pay_enrolled (bool): (Mortgage/Loan) Enrolled in autopay (F/Y). [optional]  # noqa: E501
            margin_allowed (bool): Margin trading indicator (true / false). [optional]  # noqa: E501
            cash_account_allowed (bool): Cash account allowed indicator (true / false). [optional]  # noqa: E501
            collateral (str): (Mortgage/Loan) Collateral on loan. [optional]  # noqa: E501
            current_school (str): (Mortgage/Loan) Current school. [optional]  # noqa: E501
            first_payment_date (int): (Mortgage/Loan) First payment due date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            first_mortgage (bool): (Mortgage/Loan) First mortgage (F/Y). [optional]  # noqa: E501
            loan_payment_freq (str): (Mortgage/Loan) Frequency of payments (monthly, etc.). [optional]  # noqa: E501
            original_school (str): (Mortgage/Loan) Original school. [optional]  # noqa: E501
            recurring_payment_amount (float): (Mortgage/Loan) Recurring payment amount. [optional]  # noqa: E501
            lender (str): (Mortgage/Loan) Owner of loan. [optional]  # noqa: E501
            ending_balance_amount (float): (Mortgage/Loan) Ending balance. [optional]  # noqa: E501
            loan_term_type (str): (Mortgage/Loan) Type of loan term. [optional]  # noqa: E501
            payments_made (int): (Mortgage/Loan) Number of payments made. [optional]  # noqa: E501
            balloon_amount (float): (Mortgage/Loan) Balloon payment amount. [optional]  # noqa: E501
            projected_interest (float): (Mortgage/Loan) Projected interest on the loan. [optional]  # noqa: E501
            interest_paid_ltd (float): (Mortgage/Loan) Interest paid since inception of loan (life to date). [optional]  # noqa: E501
            interest_rate_type (str): (Mortgage/Loan) Type of interest rate. [optional]  # noqa: E501
            loan_payment_type (str): (Mortgage/Loan) Type of loan payment. [optional]  # noqa: E501
            repayment_plan (str): (Mortgage/Loan) Type of repayment plan for the student loan. [optional]  # noqa: E501
            payments_remaining (int): (Mortgage/Loan) Number of payments remaining before loan is paid off. [optional]  # noqa: E501
            margin_balance (float): (Investment) Net interest earned after deducting interest paid out. [optional]  # noqa: E501
            short_balance (float): (Investment) Sum of short balance. [optional]  # noqa: E501
            available_cash_balance (float): (Investment) Amount available for cash withdrawal. [optional]  # noqa: E501
            maturity_value_amount (float): (Investment) amount payable to an investor at maturity. [optional]  # noqa: E501
            vested_balance (float): (Investment) Vested amount in account. [optional]  # noqa: E501
            emp_match_amount (float): (Investment) Employer matched contributions. [optional]  # noqa: E501
            emp_pretax_contrib_amount (float): (Investment) Employer pretax contribution amount. [optional]  # noqa: E501
            emp_pretax_contrib_amount_ytd (float): (Investment) Employer pretax contribution amount year to date. [optional]  # noqa: E501
            contrib_total_ytd (float): (Investment) Total year to date contributions. [optional]  # noqa: E501
            cash_balance_amount (float): (Investment) Cash balance of account. [optional]  # noqa: E501
            pre_tax_amount (float): (Investment) Pre tax amount of total balance. [optional]  # noqa: E501
            after_tax_amount (float): (Investment) Post tax amount of total balance. [optional]  # noqa: E501
            match_amount (float): (Investment) Amount matched. [optional]  # noqa: E501
            profit_sharing_amount (float): (Investment) Amount of balance for profit sharing. [optional]  # noqa: E501
            rollover_amount (float): (Investment) Amount of balance rolled over from original account (401k, etc.). [optional]  # noqa: E501
            other_vest_amount (float): (Investment) Other vested amount. [optional]  # noqa: E501
            other_nonvest_amount (float): (Investment) Other nonvested amount. [optional]  # noqa: E501
            current_loan_balance (float): (Investment) Current loan balance. [optional]  # noqa: E501
            loan_rate (float): (Investment) Interest rate of loan. [optional]  # noqa: E501
            buy_power (float): (Investment) Money available to buy securities. [optional]  # noqa: E501
            rollover_ltd (float): (Investment) Life to date of money rolled over. [optional]  # noqa: E501
            loan_award_id (str): (Student Loan) The federal unique loan identifying number. [optional]  # noqa: E501
            original_interest_rate (float): (Student Loan) The original interest rate to which the loan was disbursed, in APY. [optional]  # noqa: E501
            guarantor (str): (Student Loan) The financial institution guarantor of the loan (who will pay the loan amount to the owner if the borrower defaults). [optional]  # noqa: E501
            owner (str): (Student Loan) Owner of the loan. [optional]  # noqa: E501
            interest_subsidy_type (str): (Student Loan) The indication of the presence of an interest subsidy (i.e. subsidized). [optional]  # noqa: E501
            interest_balance (float): (Student Loan) The total outstanding interest balance. [optional]  # noqa: E501
            remaining_term_of_ml (float): (Student Loan) The number of months still outstanding on a loan. [optional]  # noqa: E501
            initial_interest_rate (float): (Student Loan) Initial interest rate of loan. [optional]  # noqa: E501
            fees_balance (float): (Student Loan) The total outstanding fees balance. [optional]  # noqa: E501
            loan_ytd_interest_paid (float): (Student Loan) Loan interest paid year-to-date. [optional]  # noqa: E501
            loan_ytd_fees_paid (float): (Student Loan) Loan fees paid year-to-date. [optional]  # noqa: E501
            loan_ytd_principal_paid (float): (Student Loan) Loan principal paid year-to-date. [optional]  # noqa: E501
            loan_status (str): (Student Loan) The repayment status phase (i.e. In School, Grace, Repayment, Deferment, Forbearance). [optional]  # noqa: E501
            loan_status_start_date (int): (Student Loan) The start date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            loan_status_end_date (int): (Student Loan) The end date of the current status. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            weighted_interest_rate (float): (Student Loan) The interest rate of multiple interest rates and balances at the group level, in APY. [optional]  # noqa: E501
            repayment_plan_start_date (int): (Student Loan) The start date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            repayment_plan_end_date (int): (Student Loan) The end date of the current repayment plan. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            expected_payoff_date (int): (Student Loan) The expected date of the payoff date. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            out_of_school_date (int): (Student Loan) The date the borrower graduated or dropped below half-time enrollment in school. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            convert_to_repayment (int): (Student Loan) The date the loan enters into repayment. A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).. [optional]  # noqa: E501
            days_delinquent (int): (Student Loan) The number of days past a due date that a payment should have been made. [optional]  # noqa: E501
            total_principal_paid (float): (Student Loan) The total amount paid towards the principal balance. [optional]  # noqa: E501
            total_interest_paid (float): (Student Loan) The total amount paid towards interest. [optional]  # noqa: E501
            total_amount_paid (float): (Student Loan) The total amount paid. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
